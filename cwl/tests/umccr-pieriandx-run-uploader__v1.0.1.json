{
    "$graph": [
        {
            "class": "ExpressionTool",
            "doc": "Retrieve a list of file objects from a directory.\n",
            "label": "discover_files_from_directory",
            "requirements": [
                {
                    "class": "LoadListingRequirement",
                    "loadListing": "shallow_listing"
                },
                {
                    "class": "InlineJavascriptRequirement",
                    "expressionLib": [
                        "var find_file_from_dir = function (dir, file_name_list) { var output_list = []; var l = dir.listing; var n = l.length; for (var i = 0; i < n; i++) { if (l[i].class === \"File\") { var m = file_name_list.length; for (var j = 0; j < m; j++) { if (file_name_list[j] === l[i].basename) { output_list.push(l[i]); file_name_list.splice(j, 1); break; } } } if (file_name_list.length == 0) { break; } }; return output_list;}"
                    ]
                }
            ],
            "inputs": [
                {
                    "type": {
                        "type": "array",
                        "items": "string"
                    },
                    "doc": "List of the files names to find from the input_dir\n",
                    "id": "#find-files-from-dir__v1.0.0.cwl/file_basename_list"
                },
                {
                    "type": "Directory",
                    "doc": "Input directory to finding files\n",
                    "id": "#find-files-from-dir__v1.0.0.cwl/input_dir"
                }
            ],
            "outputs": [
                {
                    "type": {
                        "type": "array",
                        "items": "File"
                    },
                    "doc": "List of file objects extracted from the input directory\n",
                    "id": "#find-files-from-dir__v1.0.0.cwl/output_files"
                }
            ],
            "expression": "${\n  return {\"output_files\": find_file_from_dir(inputs.input_dir, inputs.file_basename_list)};\n}",
            "id": "#find-files-from-dir__v1.0.0.cwl"
        },
        {
            "class": "CommandLineTool",
            "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl",
            "label": "PierianDx_Run_Uploader",
            "doc": "This is a PierianDx Run Uploader for TSO500\n",
            "hints": [
                {
                    "class": "LoadListingRequirement",
                    "loadListing": "deep_listing"
                },
                {
                    "class": "NetworkAccess",
                    "networkAccess": true
                },
                {
                    "dockerPull": "amazoncorretto:8",
                    "class": "DockerRequirement"
                },
                {
                    "class": "ResourceRequirement",
                    "https://platform.illumina/rdf/ica/resources": {
                        "tier": "standard",
                        "type": "standard",
                        "size": "small"
                    }
                }
            ],
            "requirements": [
                {
                    "class": "InlineJavascriptRequirement"
                },
                {
                    "class": "InitialWorkDirRequirement",
                    "listing": [
                        "$(inputs.pieriandx_run_uploader)",
                        "$(inputs.s3_credential_file)",
                        {
                            "entry": "$(inputs.msi_json)",
                            "entryname": "$(\"TSO500_ctDNA_output/Logs_Intermediates/Msi/\" + inputs.sample_id + \"/\" + inputs.sample_id + \".msi.json\")"
                        },
                        {
                            "entry": "$(inputs.tmb_json)",
                            "entryname": "$(\"TSO500_ctDNA_output/Logs_Intermediates/Tmb/\" + inputs.sample_id + \"/\" + inputs.sample_id + \".tmb.json\")"
                        },
                        {
                            "entry": "$(inputs.dsdm_json)",
                            "entryname": "$(\"TSO500_ctDNA_output/Results/dsdm.json\")"
                        },
                        {
                            "entry": "$(inputs.copynumbervariants_vcf)",
                            "entryname": "$(\"TSO500_ctDNA_output/Results/\" + inputs.sample_id + \"/\" + inputs.sample_id + \"_CopyNumberVariants.vcf\")"
                        },
                        {
                            "entry": "$(inputs.fusions_csv)",
                            "entryname": "$(\"TSO500_ctDNA_output/Results/\" + inputs.sample_id + \"/\" + inputs.sample_id + \"_Fusions.csv\")"
                        },
                        {
                            "entry": "$(inputs.mergedsmallvariants_vcf)",
                            "entryname": "$(\"TSO500_ctDNA_output/Results/\" + inputs.sample_id + \"/\" + inputs.sample_id + \"_MergedSmallVariants.vcf\")"
                        }
                    ]
                }
            ],
            "baseCommand": [
                "java",
                "-jar"
            ],
            "arguments": [
                "-Dloader.main=com.pdx.commandLine.ApplicationCommandLine"
            ],
            "inputs": [
                {
                    "type": "boolean",
                    "default": true,
                    "inputBinding": {
                        "prefix": "--commandLine",
                        "position": 1
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/command_line"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/copynumbervariants_vcf"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/dsdm_json"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/fusions_csv"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/mergedsmallvariants_vcf"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/msi_json"
                },
                {
                    "type": "File",
                    "doc": "RunUploader-1.13.jar (CGW Run uploader)\n",
                    "inputBinding": {
                        "position": 0,
                        "valueFrom": "$(self.basename)"
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/pieriandx_run_uploader"
                },
                {
                    "type": "string",
                    "doc": "GatheredResults directory of ICA TSO500 (solid/liquid) outputs.\n",
                    "default": "TSO500_ctDNA_output",
                    "inputBinding": {
                        "prefix": "--runFolder=",
                        "separate": false,
                        "position": 2
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/run_folder"
                },
                {
                    "type": "string",
                    "inputBinding": {
                        "prefix": "--runId=",
                        "separate": false,
                        "position": 3
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/run_id"
                },
                {
                    "type": "File",
                    "doc": "the application.properties file\nUpdate the below 3 lines in \u2018application.properties\u2019 file as described below\n  cgw.run.institution=[Add your institution name as given by PierianDx]\n  cgw.run.s3.accessKey=[Add your AWS accessKey given by PierianDx]\n  cgw.run.s3.secretKey=[Add your AWS secretKey given by PierianDx]\n",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/s3_credential_file"
                },
                {
                    "type": "string",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/sample_id"
                },
                {
                    "type": "File",
                    "inputBinding": {
                        "prefix": "--sampleSheet=",
                        "separate": false,
                        "position": 4
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/sample_sheet"
                },
                {
                    "type": "string",
                    "default": "Illumina",
                    "inputBinding": {
                        "prefix": "--sequencer=",
                        "separate": false,
                        "position": 5
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/sequencer"
                },
                {
                    "type": "string",
                    "doc": "TSO500 DRAGEN VCF workflows - tso500_v2_vcf\nTSO500 v1 and v2 HT VCF only workflow - TSO500 HT VCF only workflow\nTSO500 ctDNA VCF workflow - TSO500 ctDNA VCF Workflow\n",
                    "inputBinding": {
                        "prefix": "--sequencerFileType=",
                        "separate": false,
                        "position": 6
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/sequencer_file_type"
                },
                {
                    "type": "File",
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/tmb_json"
                }
            ],
            "outputs": [
                {
                    "type": "File",
                    "outputBinding": {
                        "glob": "cgwRunUploader.log"
                    },
                    "id": "#umccr_pieriandx_run_uploader__v1.0.1.cwl/cgw_run_uploader_log"
                }
            ],
            "s:codeRepository": "https://github.com/YinanWang16/tso500-ctdna-post-processing"
        },
        {
            "class": "Workflow",
            "id": "#main",
            "doc": "This is a pieriandx run uploader for UMCCR tso500 ctDNA output\n",
            "requirements": [
                {
                    "class": "StepInputExpressionRequirement"
                },
                {
                    "class": "MultipleInputFeatureRequirement"
                },
                {
                    "class": "InlineJavascriptRequirement"
                },
                {
                    "class": "SchemaDefRequirement",
                    "types": [
                        {
                            "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample",
                            "type": "record",
                            "fields": [
                                {
                                    "label": "align collapse fusion caller dir",
                                    "doc": "Intermediate output directory for align collapse fusion caller step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/align_collapse_fusion_caller_dir"
                                },
                                {
                                    "label": "annotation dir",
                                    "doc": "Intermediate output directory for annotation step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/annotation_dir"
                                },
                                {
                                    "label": "cnv caller dir",
                                    "doc": "Intermediate output directory for cnv caller step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/cnv_caller_dir"
                                },
                                {
                                    "label": "combined variant output dir",
                                    "doc": "Intermediate output directory for combined variant output dir\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/combined_variant_output_dir"
                                },
                                {
                                    "label": "contamination dir",
                                    "doc": "Intermediate output directory for contamination step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/contamination_dir"
                                },
                                {
                                    "label": "dna fusion filtering dir",
                                    "doc": "Intermediate output directory for dna fusion filtering step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/dna_fusion_filtering_dir"
                                },
                                {
                                    "label": "dna qc metrics dir",
                                    "doc": "Intermediate output directory for dna qc metrics step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/dna_qc_metrics_dir"
                                },
                                {
                                    "label": "dsdm.json",
                                    "doc": "dsdm.json file in Results directory\n",
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/dsdm_json"
                                },
                                {
                                    "label": "max somatic vaf dir",
                                    "doc": "Intermediate output directory for max somatic vaf step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/max_somatic_vaf_dir"
                                },
                                {
                                    "label": "merged annotation dir",
                                    "doc": "Intermediate output directory for merged annotation step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/merged_annotation_dir"
                                },
                                {
                                    "label": "msi dir",
                                    "doc": "Intermediate output directory for msi step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/msi_dir"
                                },
                                {
                                    "label": "phased variants dir",
                                    "doc": "Intermediate output directory for phased variants step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/phased_variants_dir"
                                },
                                {
                                    "label": "results_dir",
                                    "doc": "Results directory for the given sample\n",
                                    "type": "Directory",
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/results_dir"
                                },
                                {
                                    "label": "sample analysis results json",
                                    "doc": "The sample analysis results json file\n",
                                    "type": [
                                        "null",
                                        "File"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/sample_analysis_results_json"
                                },
                                {
                                    "label": "sample id",
                                    "doc": "ID of the sample, matches the Sample_ID column in the sample sheet\n",
                                    "type": "string",
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/sample_id"
                                },
                                {
                                    "label": "sample name",
                                    "doc": "Name of the sample, matches the rgsm value of the fastq list row\n",
                                    "type": "string",
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/sample_name"
                                },
                                {
                                    "label": "small variant filter dir",
                                    "doc": "Intermediate output directory for small variants filter step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/small_variant_filter_dir"
                                },
                                {
                                    "label": "stitched realigned dir",
                                    "doc": "Intermediate output directory for stitched realigned step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/stitched_realigned_dir"
                                },
                                {
                                    "label": "tmb dir",
                                    "doc": "Intermediate output directory for tmb step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/tmb_dir"
                                },
                                {
                                    "label": "variant caller dir",
                                    "doc": "Intermediate output directory for variant caller step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/variant_caller_dir"
                                },
                                {
                                    "label": "variant matching dir",
                                    "doc": "Intermediate output directory for variant matching step\n",
                                    "type": [
                                        "null",
                                        "Directory"
                                    ],
                                    "name": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample/variant_matching_dir"
                                }
                            ],
                            "id": "#tso500-outputs-by-sample_1.0.0.yaml"
                        }
                    ]
                }
            ],
            "inputs": [
                {
                    "type": "File",
                    "doc": "RunUploader-1.13.jar (CGW Run uploader)\n",
                    "id": "#pieriandx_run_uploader"
                },
                {
                    "type": "string",
                    "doc": "Run Id same as you would enter in CGW\ni.e. 190701_NDX550135_RUO_0039_AXXXXXXXXX\n",
                    "id": "#run_id"
                },
                {
                    "type": "File",
                    "doc": "\u2018application.properties\u2019 file\nUpdate the below 3 lines in \u2018application.properties\u2019 file as described below\n  cgw.run.institution=[Add your institution name as given by PierianDx]\n  cgw.run.s3.accessKey=[Add your AWS accessKey given by PierianDx]\n  cgw.run.s3.secretKey=[Add your AWS secretKey given by PierianDx]\n",
                    "id": "#s3_credential_file"
                },
                {
                    "type": "File",
                    "id": "#sample_sheet"
                },
                {
                    "type": "string",
                    "doc": "TSO500 DRAGEN VCF workflow - \"tso500_v2_vcf\"\nTSO500 v1 and v2 HT VCF only workflow - \"TSO500 HT VCF only workflow\"\nTSO500 ctDNA VCF workflow - \"TSO500 ctDNA VCF Workflow\"\n",
                    "id": "#sequencer_file_type"
                },
                {
                    "type": "#tso500-outputs-by-sample_1.0.0.yaml/tso500-outputs-by-sample",
                    "doc": "Directories and Files of UMCCR tso500 outpout\n",
                    "id": "#tso500_outputs_by_sample"
                }
            ],
            "outputs": [
                {
                    "type": "File",
                    "outputSource": "#/pieriandx_run_uploader_step/cgw_run_uploader_log",
                    "id": "#cgw_run_uploader_log"
                }
            ],
            "steps": [
                {
                    "run": "#find-files-from-dir__v1.0.0.cwl",
                    "in": [
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "${return [self.sample_id + \"_CopyNumberVariants.vcf\"]}",
                            "id": "#get_copynumbervariants_vcf_step/file_basename_list"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.results_dir)",
                            "id": "#get_copynumbervariants_vcf_step/input_dir"
                        }
                    ],
                    "out": [
                        "#/get_copynumbervariants_vcf_step/output_files"
                    ],
                    "id": "#get_copynumbervariants_vcf_step"
                },
                {
                    "run": "#find-files-from-dir__v1.0.0.cwl",
                    "in": [
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "${return [self.sample_id + \"_Fusions.csv\"]}",
                            "id": "#get_fusions_csv_step/file_basename_list"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.results_dir)",
                            "id": "#get_fusions_csv_step/input_dir"
                        }
                    ],
                    "out": [
                        "#/get_fusions_csv_step/output_files"
                    ],
                    "id": "#get_fusions_csv_step"
                },
                {
                    "run": "#find-files-from-dir__v1.0.0.cwl",
                    "in": [
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "${return [self.sample_id + \"_MergedSmallVariants.vcf\"]}",
                            "id": "#get_mergedsmallvariants_vcf_step/file_basename_list"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.results_dir)",
                            "id": "#get_mergedsmallvariants_vcf_step/input_dir"
                        }
                    ],
                    "out": [
                        "#/get_mergedsmallvariants_vcf_step/output_files"
                    ],
                    "id": "#get_mergedsmallvariants_vcf_step"
                },
                {
                    "run": "#find-files-from-dir__v1.0.0.cwl",
                    "in": [
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "${return [self.sample_id + \".msi.json\"]}",
                            "id": "#get_msi_json_step/file_basename_list"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.msi_dir)",
                            "id": "#get_msi_json_step/input_dir"
                        }
                    ],
                    "out": [
                        "#/get_msi_json_step/output_files"
                    ],
                    "id": "#get_msi_json_step"
                },
                {
                    "run": "#find-files-from-dir__v1.0.0.cwl",
                    "in": [
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "${return [self.sample_id + \".tmb.json\"]}",
                            "id": "#get_tmb_json_step/file_basename_list"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.tmb_dir)",
                            "id": "#get_tmb_json_step/input_dir"
                        }
                    ],
                    "out": [
                        "#/get_tmb_json_step/output_files"
                    ],
                    "id": "#get_tmb_json_step"
                },
                {
                    "run": "#umccr_pieriandx_run_uploader__v1.0.1.cwl",
                    "in": [
                        {
                            "default": true,
                            "id": "#pieriandx_run_uploader_step/command_line"
                        },
                        {
                            "source": "#/get_copynumbervariants_vcf_step/output_files",
                            "valueFrom": "$(self[0])",
                            "id": "#pieriandx_run_uploader_step/copynumbervariants_vcf"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.dsdm_json)",
                            "id": "#pieriandx_run_uploader_step/dsdm_json"
                        },
                        {
                            "source": "#/get_fusions_csv_step/output_files",
                            "valueFrom": "$(self[0])",
                            "id": "#pieriandx_run_uploader_step/fusions_csv"
                        },
                        {
                            "source": "#/get_mergedsmallvariants_vcf_step/output_files",
                            "valueFrom": "$(self[0])",
                            "id": "#pieriandx_run_uploader_step/mergedsmallvariants_vcf"
                        },
                        {
                            "source": "#/get_msi_json_step/output_files",
                            "valueFrom": "$(self[0])",
                            "id": "#pieriandx_run_uploader_step/msi_json"
                        },
                        {
                            "source": "#pieriandx_run_uploader",
                            "id": "#pieriandx_run_uploader_step/pieriandx_run_uploader"
                        },
                        {
                            "source": "#run_id",
                            "id": "#pieriandx_run_uploader_step/run_id"
                        },
                        {
                            "source": "#s3_credential_file",
                            "id": "#pieriandx_run_uploader_step/s3_credential_file"
                        },
                        {
                            "source": "#tso500_outputs_by_sample",
                            "valueFrom": "$(self.sample_id)",
                            "id": "#pieriandx_run_uploader_step/sample_id"
                        },
                        {
                            "source": "#sample_sheet",
                            "id": "#pieriandx_run_uploader_step/sample_sheet"
                        },
                        {
                            "default": "Illumina",
                            "id": "#pieriandx_run_uploader_step/sequencer"
                        },
                        {
                            "source": "#sequencer_file_type",
                            "id": "#pieriandx_run_uploader_step/sequencer_file_type"
                        },
                        {
                            "source": "#/get_tmb_json_step/output_files",
                            "valueFrom": "$(self[0])",
                            "id": "#pieriandx_run_uploader_step/tmb_json"
                        }
                    ],
                    "out": [
                        "#/pieriandx_run_uploader_step/cgw_run_uploader_log"
                    ],
                    "id": "#pieriandx_run_uploader_step"
                }
            ]
        }
    ],
    "cwlVersion": "v1.2"
}